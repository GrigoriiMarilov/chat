{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grish\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u043C\\u0435\\u0441\\u0441\\u0435\\u043D\\u0434\\u0436\\u0435\\u0440\\\\client\\\\src\\\\components\\\\MesPanel.js\",\n  _s = $RefreshSig$();\nimport { observer } from \"mobx-react-lite\";\nimport { useContext, useState } from \"react\";\nimport { Context } from \"..\";\nimport { getmessages, sendmessage } from \"../http/chatApi\";\nimport SendMessage from \"./SendMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MesPanel = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    Activeuser,\n    controler,\n    chats\n  } = useContext(Context);\n  const userId = Activeuser.userId;\n  const [text, setText] = useState(\"\");\n  async function click(e) {\n    e.preventDefault();\n    console.log(Activeuser.userId);\n    console.log(chats.selectedChat.id);\n    sendmessage(text, Activeuser.userId, chats.selectedChat.id);\n    const a = await getmessages(chats.selectedChat.id);\n    controler.setMessages(a);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messagepanel\",\n      children: controler.messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: userId === message.userId ? {\n          alignSelf: \"flex-end\"\n        } : {\n          alignSelf: \"flex-start\"\n        },\n        children: message.text\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sendmessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"sendmessage-input\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: click,\n        className: \"sendmessage-button\",\n        children: \"\\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}, \"FkE+if+2oXuLkIMtIE7qeJUIdHY=\")), \"FkE+if+2oXuLkIMtIE7qeJUIdHY=\");\n_c2 = MesPanel;\nexport default MesPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"MesPanel$observer\");\n$RefreshReg$(_c2, \"MesPanel\");","map":{"version":3,"names":["observer","useContext","useState","Context","getmessages","sendmessage","SendMessage","MesPanel","Activeuser","controler","chats","userId","text","setText","click","e","preventDefault","console","log","selectedChat","id","a","setMessages","messages","map","message","alignSelf","target","value"],"sources":["C:/Users/grish/OneDrive/Рабочий стол/мессенджер/client/src/components/MesPanel.js"],"sourcesContent":["import { observer } from \"mobx-react-lite\"\r\nimport { useContext, useState } from \"react\"\r\nimport { Context } from \"..\"\r\nimport { getmessages, sendmessage } from \"../http/chatApi\"\r\nimport SendMessage from \"./SendMessage\"\r\n\r\n\r\nconst MesPanel = observer(() => {\r\n\tconst { Activeuser, controler, chats } = useContext(Context)\r\n\tconst userId = Activeuser.userId\r\n\tconst [text, setText] = useState(\"\")\r\n\r\n\tasync function click(e) {\r\n\t\te.preventDefault()\r\n\t\tconsole.log(Activeuser.userId)\r\n\t\tconsole.log(chats.selectedChat.id)\r\n\t\tsendmessage(text, Activeuser.userId, chats.selectedChat.id)\r\n\t\tconst a = await getmessages(chats.selectedChat.id)\r\n\t\tcontroler.setMessages(a)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"messagepanel\" >\r\n\t\t\t\t{\r\n\t\t\t\t\tcontroler.messages.map(message =>\r\n\t\t\t\t\t\t<div key={message.id} style={userId === message.userId ? { alignSelf: \"flex-end\" } : { alignSelf: \"flex-start\" }}>{message.text}</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<form className=\"sendmessage\">\r\n\t\t\t\t<input type=\"text\" className=\"sendmessage-input\" value={text} onChange={e => setText(e.target.value)}></input>\r\n\t\t\t\t<button onClick={click} className=\"sendmessage-button\">отправить</button>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n\r\n})\r\nexport default MesPanel"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,OAAO,QAAQ,IAAI;AAC5B,SAASC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AAC1D,OAAOC,WAAW,MAAM,eAAe;AAAA;AAAA;AAGvC,MAAMC,QAAQ,MAAGP,QAAQ,SAAC,MAAM;EAAA;EAC/B,MAAM;IAAEQ,UAAU;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGT,UAAU,CAACE,OAAO,CAAC;EAC5D,MAAMQ,MAAM,GAAGH,UAAU,CAACG,MAAM;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeY,KAAK,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACV,UAAU,CAACG,MAAM,CAAC;IAC9BM,OAAO,CAACC,GAAG,CAACR,KAAK,CAACS,YAAY,CAACC,EAAE,CAAC;IAClCf,WAAW,CAACO,IAAI,EAAEJ,UAAU,CAACG,MAAM,EAAED,KAAK,CAACS,YAAY,CAACC,EAAE,CAAC;IAC3D,MAAMC,CAAC,GAAG,MAAMjB,WAAW,CAACM,KAAK,CAACS,YAAY,CAACC,EAAE,CAAC;IAClDX,SAAS,CAACa,WAAW,CAACD,CAAC,CAAC;EACzB;EAEA,oBACC;IAAA,wBACC;MAAK,SAAS,EAAC,cAAc;MAAA,UAE3BZ,SAAS,CAACc,QAAQ,CAACC,GAAG,CAACC,OAAO,iBAC7B;QAAsB,KAAK,EAAEd,MAAM,KAAKc,OAAO,CAACd,MAAM,GAAG;UAAEe,SAAS,EAAE;QAAW,CAAC,GAAG;UAAEA,SAAS,EAAE;QAAa,CAAE;QAAA,UAAED,OAAO,CAACb;MAAI,GAArHa,OAAO,CAACL,EAAE;QAAA;QAAA;QAAA;MAAA,QAAkH;IACtI;MAAA;MAAA;MAAA;IAAA,QAEG,eACN;MAAM,SAAS,EAAC,aAAa;MAAA,wBAC5B;QAAO,IAAI,EAAC,MAAM;QAAC,SAAS,EAAC,mBAAmB;QAAC,KAAK,EAAER,IAAK;QAAC,QAAQ,EAAEG,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACY,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9G;QAAQ,OAAO,EAAEd,KAAM;QAAC,SAAS,EAAC,oBAAoB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QACnE;EAAA,gBACL;AAGL,CAAC,kCAAC;AAAA,MA9BIP,QAAQ;AA+Bd,eAAeA,QAAQ;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}