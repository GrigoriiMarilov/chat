{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grish\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u043C\\u0435\\u0441\\u0441\\u0435\\u043D\\u0434\\u0436\\u0435\\u0440\\\\chat\\\\client\\\\src\\\\components\\\\MessangerComponent.js\",\n  _s = $RefreshSig$();\nimport { observer } from \"mobx-react-lite\";\nimport React, { useLayoutEffect } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"..\";\nimport { createchat, getchat, getmessages, readmessages, sendmessage } from \"../http/chatApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessangerComponent = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    Activeuser,\n    chats\n  } = useContext(Context);\n  const [messages, setMessages] = useState([{\n    id: 0,\n    userId: 0,\n    text: \"\",\n    createdAt: 0\n  }]);\n  const [messagesLength, setMessagesLength] = useState(0);\n  const [nickname, setNickneme] = useState('');\n  const [text, setText] = useState('');\n  const [offset, setOffset] = useState(30);\n  const [loading, setLoading] = useState(false);\n  const [idIntervals, setIdIntervals] = useState(0);\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  function chatDate(date) {\n    let a = new Date(date);\n    alert(date);\n    return String(a.getDate()) + \" \" + monthNames[a.getMonth()];\n  }\n  function scrollMessagesToBottom() {\n    setTimeout(() => {\n      let element = document.getElementsByClassName(\"scrollElement\")[0];\n      element.scrollIntoView();\n    }, 200);\n  }\n  function messagedate(message) {\n    let date = new Date(message.createdAt);\n    let hh = String(date.getHours());\n    let mm = String(date.getMinutes());\n    return hh + \":\" + mm;\n  }\n  function comparison(i) {\n    if (messages.length > 0) {\n      let dateA = new Date(messages[i].createdAt);\n      if (i < messages.length) {\n        if (i === messages.length - 1) {\n          return String(dateA.getDate()) + \" \" + monthNames[dateA.getMonth()];\n        }\n        let dateB = new Date(messages[i + 1].createdAt);\n        let a = dateA.getDate();\n        let b = dateB.getDate();\n        if (a !== b) {\n          return String(a) + \" \" + monthNames[dateA.getMonth()];\n        }\n        return false;\n      }\n      return false;\n    }\n    return false;\n  }\n  function isRead(obj) {\n    let style = {};\n    if (obj.userId === Activeuser.userId) {\n      if (obj.isRead) {\n        style = {\n          alignSelf: \"flex-end\"\n        };\n      } else {\n        style = {\n          alignSelf: \"flex-end\",\n          backgroundColor: \"gray\"\n        };\n      }\n    } else {\n      if (obj.isRead) {\n        style = {\n          alignSelf: \"flex-start\",\n          backgroundColor: \"white\"\n        };\n      } else {\n        style = {\n          alignSelf: \"flex-start\",\n          backgroundColor: \"gray\"\n        };\n      }\n    }\n    return style;\n  }\n  function read(arr) {\n    let idarray = [];\n    let messagearr = messages;\n    for (let i = 0; i < arr.length; i++) {\n      if (!arr[i].isRead && arr[i].userId !== Activeuser.userId) {\n        idarray.push(arr[i].id);\n        messagearr[i].isRead = true;\n      }\n      if (idarray.length > 0) {\n        setMessages(messagearr);\n        return readmessages(idarray);\n      }\n    }\n  }\n  useEffect(() => {\n    clearInterval(idIntervals);\n    read(messages);\n    function interval() {\n      getmessages(chats.selectedChat.id, 0).then(result => {\n        let res = result.data;\n        if (res[0] !== messages[0] && messages.length > 1) {\n          setMessages(res);\n          scrollMessagesToBottom();\n          setOffset(30);\n        }\n      });\n    }\n    setIdIntervals(setInterval(() => {\n      interval();\n    }, 3500));\n  }, [messages[0]]);\n  useEffect(() => {\n    function messageResponse() {\n      getmessages(chats.selectedChat.id, 0).then(result => {\n        setMessages(result.data);\n        scrollMessagesToBottom();\n        setMessagesLength(result.headers.get(\"Length\"));\n      });\n    }\n    messageResponse();\n  }, [chats.selectedChat]);\n  useEffect(() => {\n    if (loading) {\n      if (messages.length < messagesLength) {\n        getmessages(chats.selectedChat.id, offset).then(result => {\n          setOffset(prevState => prevState + 30);\n          setMessages([...messages, ...result.data]);\n          setMessagesLength(result.headers.get(\"Length\"));\n        });\n      }\n    }\n    setLoading(false);\n  }, [loading]);\n  useEffect(() => {\n    setTimeout(() => {\n      document.getElementsByClassName(\"message__section\")[0].addEventListener(\"scroll\", scrollHandler);\n      console.log(loading);\n      return function () {\n        document.getElementsByClassName(\"message__section\")[0].removeEventListener(\"scroll\", scrollHandler);\n      };\n    }, 400);\n  }, []);\n  function click(chat) {\n    chats.setSelectedChat(chat);\n    async function response() {\n      getmessages(chats.selectedChat.id, 0).then(result => {\n        setMessages(result.data);\n        scrollMessagesToBottom();\n        setOffset(30);\n        setMessagesLength(result.headers.get(\"Length\"));\n      });\n    }\n    response();\n    setLoading(false);\n  }\n  const click1 = async e => {\n    e.preventDefault();\n    await sendmessage(text, Activeuser.userId, chats.selectedChat.id);\n    getmessages(chats.selectedChat.id, 0).then(result => {\n      setMessages(result.data);\n      scrollMessagesToBottom();\n      setOffset(30);\n    });\n    setText(\"\");\n    setLoading(false);\n  };\n  const scrollHandler = e => {\n    if (document.getElementsByClassName(\"message__section\")[0].scrollTop < 150) {\n      if (!loading) {\n        setLoading(true);\n      }\n    }\n  };\n  const requsetcreatechat = async e => {\n    e.preventDefault();\n    await createchat(Activeuser.userNickname, nickname);\n    const b = await getchat(Activeuser.userId);\n    chats.setChats(b);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"CreateChatComponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"CreateChatComponent_button\",\n          onClick: requsetcreatechat,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"34\",\n            height: \"34\",\n            viewBox: \"0 0 34 34\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M33.1834 30.8167L27.0001 24.6833C29.4002 21.6907 30.5626 17.8922 30.2481 14.0688C29.9336 10.2455 28.1662 6.68796 25.3093 4.12773C22.4524 1.5675 18.7231 0.199177 14.8883 0.304111C11.0535 0.409045 7.40462 1.97926 4.69199 4.6919C1.97935 7.40453 0.409136 11.0534 0.304202 14.8882C0.199268 18.723 1.56759 22.4523 4.12783 25.3092C6.68806 28.1661 10.2456 29.9335 14.0689 30.248C17.8922 30.5625 21.6908 29.4002 24.6834 27L30.8168 33.1333C30.9717 33.2895 31.156 33.4135 31.3591 33.4981C31.5622 33.5828 31.7801 33.6263 32.0001 33.6263C32.2201 33.6263 32.4379 33.5828 32.641 33.4981C32.8441 33.4135 33.0285 33.2895 33.1834 33.1333C33.4838 32.8226 33.6517 32.4072 33.6517 31.975C33.6517 31.5428 33.4838 31.1274 33.1834 30.8167ZM15.3334 27C13.026 27 10.7703 26.3158 8.85177 25.0338C6.93319 23.7519 5.43785 21.9298 4.55482 19.798C3.6718 17.6662 3.44076 15.3204 3.89092 13.0573C4.34108 10.7942 5.45223 8.71536 7.08384 7.08375C8.71545 5.45214 10.7943 4.34099 13.0574 3.89083C15.3205 3.44067 17.6663 3.67171 19.7981 4.55473C21.9299 5.43775 23.7519 6.9331 25.0339 8.85167C26.3158 10.7702 27.0001 13.0259 27.0001 15.3333C27.0001 18.4275 25.7709 21.395 23.583 23.5829C21.3951 25.7708 18.4276 27 15.3334 27Z\",\n              fill: \"#888888\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 106\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"CreateChatComponent_input\",\n          value: nickname,\n          onChange: e => setNickneme(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this), chats.aliveChats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          click(chat);\n        },\n        className: chat.id === chats.selectedChat.id ? \"ChatCard active\" : \"ChatCard\",\n        children: [chat.host === Activeuser.userNickname ? chat.nickname : chat.host, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 205\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: chatDate(chat.upadatedAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 214\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: chat.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 254\n        }, this)]\n      }, chat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messagepanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messagepanelheader\",\n        children: chats.selectedChat.host === Activeuser.userNickname ? chats.selectedChat.nickname : chats.selectedChat.host\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"message__section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scrollElement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this), messages.map(function (message, index) {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                style: isRead(message),\n                children: [message.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data\",\n                  children: messagedate(message)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 10\n              }, this), comparison(index) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: comparison(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 31\n              }, this) : \"\"]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 9\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qeq\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), chats.selectedChat ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sendmessage\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"sendmessage-input\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: click1,\n          className: \"sendmessage-button\",\n          children: \"\\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 27\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}, \"Xh15GvoznUbPOonQ7Hr2UqTyMtM=\")), \"Xh15GvoznUbPOonQ7Hr2UqTyMtM=\");\n_c2 = MessangerComponent;\nexport default MessangerComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessangerComponent$observer\");\n$RefreshReg$(_c2, \"MessangerComponent\");","map":{"version":3,"names":["observer","React","useLayoutEffect","useContext","useEffect","useState","Context","createchat","getchat","getmessages","readmessages","sendmessage","MessangerComponent","Activeuser","chats","messages","setMessages","id","userId","text","createdAt","messagesLength","setMessagesLength","nickname","setNickneme","setText","offset","setOffset","loading","setLoading","idIntervals","setIdIntervals","monthNames","chatDate","date","a","Date","alert","String","getDate","getMonth","scrollMessagesToBottom","setTimeout","element","document","getElementsByClassName","scrollIntoView","messagedate","message","hh","getHours","mm","getMinutes","comparison","i","length","dateA","dateB","b","isRead","obj","style","alignSelf","backgroundColor","read","arr","idarray","messagearr","push","clearInterval","interval","selectedChat","then","result","res","data","setInterval","messageResponse","headers","get","prevState","addEventListener","scrollHandler","console","log","removeEventListener","click","chat","setSelectedChat","response","click1","e","preventDefault","scrollTop","requsetcreatechat","userNickname","setChats","target","value","aliveChats","map","host","upadatedAt","index"],"sources":["C:/Users/grish/OneDrive/Рабочий стол/мессенджер/chat/client/src/components/MessangerComponent.js"],"sourcesContent":["import { observer } from \"mobx-react-lite\"\r\nimport React, { useLayoutEffect } from \"react\"\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Context } from \"..\";\r\nimport { createchat, getchat, getmessages, readmessages, sendmessage } from \"../http/chatApi\";\r\n\r\n\r\nconst MessangerComponent = observer(() => {\r\n\tconst { Activeuser, chats } = useContext(Context)\r\n\tconst [messages, setMessages] = useState([{ id: 0, userId: 0, text: \"\", createdAt: 0 }])\r\n\tconst [messagesLength, setMessagesLength] = useState(0)\r\n\tconst [nickname, setNickneme] = useState('')\r\n\tconst [text, setText] = useState('')\r\n\tconst [offset, setOffset] = useState(30)\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [idIntervals, setIdIntervals] = useState(0)\r\n\tconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n\t];\r\n\tfunction chatDate(date) {\r\n\t\tlet a = new Date(date)\r\n\t\talert(date)\r\n\r\n\t\treturn String(a.getDate()) + \" \" + monthNames[a.getMonth()]\r\n\t}\r\n\tfunction scrollMessagesToBottom() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet element = document.getElementsByClassName(\"scrollElement\")[0]\r\n\t\t\telement.scrollIntoView()\r\n\t\t}, 200)\r\n\t}\r\n\r\n\tfunction messagedate(message) {\r\n\t\tlet date = new Date(message.createdAt)\r\n\t\tlet hh = String(date.getHours())\r\n\t\tlet mm = String(date.getMinutes())\r\n\t\treturn hh + \":\" + mm\r\n\t}\r\n\tfunction comparison(i) {\r\n\t\tif (messages.length > 0) {\r\n\t\t\tlet dateA = new Date(messages[i].createdAt)\r\n\t\t\tif (i < messages.length) {\r\n\t\t\t\tif (i === messages.length - 1) {\r\n\t\t\t\t\treturn (String(dateA.getDate()) + \" \" + monthNames[dateA.getMonth()])\r\n\t\t\t\t}\r\n\t\t\t\tlet dateB = new Date(messages[i + 1].createdAt)\r\n\t\t\t\tlet a = dateA.getDate()\r\n\t\t\t\tlet b = dateB.getDate()\r\n\t\t\t\tif (a !== b) {\r\n\t\t\t\t\treturn (String(a) + \" \" + monthNames[dateA.getMonth()])\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\tfunction isRead(obj) {\r\n\t\tlet style = {}\r\n\t\tif (obj.userId === Activeuser.userId) {\r\n\t\t\tif (obj.isRead) {\r\n\t\t\t\tstyle = { alignSelf: \"flex-end\" }\r\n\t\t\t} else {\r\n\t\t\t\tstyle = { alignSelf: \"flex-end\", backgroundColor: \"gray\" }\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (obj.isRead) {\r\n\r\n\t\t\t\tstyle = { alignSelf: \"flex-start\", backgroundColor: \"white\" }\r\n\t\t\t} else {\r\n\t\t\t\tstyle = { alignSelf: \"flex-start\", backgroundColor: \"gray\" }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\tfunction read(arr) {\r\n\t\tlet idarray = []\r\n\t\tlet messagearr = messages\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tif (!arr[i].isRead && arr[i].userId !== Activeuser.userId) {\r\n\t\t\t\tidarray.push(arr[i].id)\r\n\t\t\t\tmessagearr[i].isRead = true\r\n\t\t\t}\r\n\t\t\tif (idarray.length > 0) {\r\n\t\t\t\tsetMessages(messagearr)\r\n\t\t\t\treturn readmessages(idarray)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tclearInterval(idIntervals)\r\n\t\tread(messages)\r\n\t\tfunction interval() {\r\n\t\t\tgetmessages(chats.selectedChat.id, 0).then(result => {\r\n\t\t\t\tlet res = result.data\r\n\t\t\t\tif (res[0] !== messages[0] && messages.length > 1) {\r\n\t\t\t\t\tsetMessages(res)\r\n\t\t\t\t\tscrollMessagesToBottom()\r\n\t\t\t\t\tsetOffset(30)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetIdIntervals(setInterval(() => { interval() }, 3500))\r\n\t}, [messages[0]])\r\n\r\n\tuseEffect(() => {\r\n\t\tfunction messageResponse() {\r\n\t\t\tgetmessages(chats.selectedChat.id, 0).then(result => {\r\n\t\t\t\tsetMessages(result.data)\r\n\t\t\t\tscrollMessagesToBottom()\r\n\t\t\t\tsetMessagesLength(result.headers.get(\"Length\"))\r\n\t\t\t})\r\n\t\t}\r\n\t\tmessageResponse()\r\n\t}, [chats.selectedChat])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (loading) {\r\n\t\t\tif (messages.length < messagesLength) {\r\n\t\t\t\tgetmessages(chats.selectedChat.id, offset).then(result => {\r\n\t\t\t\t\tsetOffset(prevState => prevState + 30)\r\n\t\t\t\t\tsetMessages([...messages, ...result.data])\r\n\t\t\t\t\tsetMessagesLength(result.headers.get(\"Length\"))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLoading(false)\r\n\t}, [loading])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tdocument.getElementsByClassName(\"message__section\")[0].addEventListener(\"scroll\", scrollHandler)\r\n\t\t\tconsole.log(loading)\r\n\t\t\treturn function () {\r\n\t\t\t\tdocument.getElementsByClassName(\"message__section\")[0].removeEventListener(\"scroll\", scrollHandler)\r\n\t\t\t}\r\n\t\t}, 400)\r\n\t}, [])\r\n\r\n\tfunction click(chat) {\r\n\t\tchats.setSelectedChat(chat)\r\n\t\tasync function response() {\r\n\t\t\tgetmessages(chats.selectedChat.id, 0).then(result => {\r\n\t\t\t\tsetMessages(result.data)\r\n\t\t\t\tscrollMessagesToBottom()\r\n\t\t\t\tsetOffset(30)\r\n\t\t\t\tsetMessagesLength(result.headers.get(\"Length\"))\r\n\t\t\t})\r\n\t\t}\r\n\t\tresponse()\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tconst click1 = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tawait sendmessage(text, Activeuser.userId, chats.selectedChat.id)\r\n\t\tgetmessages(chats.selectedChat.id, 0).then(result => {\r\n\t\t\tsetMessages(result.data)\r\n\t\t\tscrollMessagesToBottom()\r\n\t\t\tsetOffset(30)\r\n\t\t})\r\n\t\tsetText(\"\")\r\n\t\tsetLoading(false)\r\n\t}\r\n\tconst scrollHandler = (e) => {\r\n\t\tif (document.getElementsByClassName(\"message__section\")[0].scrollTop < 150) {\r\n\t\t\tif (!loading) {\r\n\t\t\t\tsetLoading(true)\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\t}\r\n\tconst requsetcreatechat = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tawait createchat(Activeuser.userNickname, nickname)\r\n\t\tconst b = await getchat(Activeuser.userId)\r\n\t\tchats.setChats(b)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"ChatBar\">\r\n\t\t\t\t<form className=\"CreateChatComponent\">\r\n\t\t\t\t\t<button type=\"submit\" className=\"CreateChatComponent_button\" onClick={requsetcreatechat} value={\"\"}><svg width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t<path d=\"M33.1834 30.8167L27.0001 24.6833C29.4002 21.6907 30.5626 17.8922 30.2481 14.0688C29.9336 10.2455 28.1662 6.68796 25.3093 4.12773C22.4524 1.5675 18.7231 0.199177 14.8883 0.304111C11.0535 0.409045 7.40462 1.97926 4.69199 4.6919C1.97935 7.40453 0.409136 11.0534 0.304202 14.8882C0.199268 18.723 1.56759 22.4523 4.12783 25.3092C6.68806 28.1661 10.2456 29.9335 14.0689 30.248C17.8922 30.5625 21.6908 29.4002 24.6834 27L30.8168 33.1333C30.9717 33.2895 31.156 33.4135 31.3591 33.4981C31.5622 33.5828 31.7801 33.6263 32.0001 33.6263C32.2201 33.6263 32.4379 33.5828 32.641 33.4981C32.8441 33.4135 33.0285 33.2895 33.1834 33.1333C33.4838 32.8226 33.6517 32.4072 33.6517 31.975C33.6517 31.5428 33.4838 31.1274 33.1834 30.8167ZM15.3334 27C13.026 27 10.7703 26.3158 8.85177 25.0338C6.93319 23.7519 5.43785 21.9298 4.55482 19.798C3.6718 17.6662 3.44076 15.3204 3.89092 13.0573C4.34108 10.7942 5.45223 8.71536 7.08384 7.08375C8.71545 5.45214 10.7943 4.34099 13.0574 3.89083C15.3205 3.44067 17.6663 3.67171 19.7981 4.55473C21.9299 5.43775 23.7519 6.9331 25.0339 8.85167C26.3158 10.7702 27.0001 13.0259 27.0001 15.3333C27.0001 18.4275 25.7709 21.395 23.583 23.5829C21.3951 25.7708 18.4276 27 15.3334 27Z\" fill=\"#888888\" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<input type=\"text\" className=\"CreateChatComponent_input\" value={nickname} onChange={e => setNickneme(e.target.value)}></input>\r\n\t\t\t\t</form>\r\n\t\t\t\t{\r\n\t\t\t\t\tchats.aliveChats.map(chat =>\r\n\t\t\t\t\t\t<div key={chat.id} onClick={() => { click(chat) }} className={chat.id === chats.selectedChat.id ? \"ChatCard active\" : \"ChatCard\"} >{chat.host === Activeuser.userNickname ? chat.nickname : chat.host}<br></br><span>{chatDate(chat.upadatedAt)}</span><span>{chat.message}</span></div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"messagepanel\" >\r\n\t\t\t\t{<div className=\"messagepanelheader\">{chats.selectedChat.host === Activeuser.userNickname ? chats.selectedChat.nickname : chats.selectedChat.host}</div>}\r\n\t\t\t\t<section className=\"message__section\"  >\r\n\t\t\t\t\t<div className=\"messages\">\r\n\t\t\t\t\t\t<div className=\"scrollElement\" ></div>\r\n\r\n\t\t\t\t\t\t{(messages.map(function (message, index) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<React.Fragment key={message.id}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"message\" style={isRead(message)}>\r\n\t\t\t\t\t\t\t\t\t\t{message.text}\r\n\t\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"data\">{messagedate(message)}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{comparison(index) ? <div >{comparison(index)}</div> : \"\"}\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"qeq\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t{\r\n\t\t\t\t\tchats.selectedChat ? <form className=\"sendmessage\">\r\n\t\t\t\t\t\t<input type=\"text\" className=\"sendmessage-input\" value={text} onChange={e => setText(e.target.value)}></input>\r\n\t\t\t\t\t\t<button onClick={click1} className=\"sendmessage-button\">отправить</button>\r\n\t\t\t\t\t</form> : \"\"\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n})\r\n\r\n\r\n\r\nexport default MessangerComponent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}